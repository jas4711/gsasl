variables:
  GIT_DEPTH: 100
  GIT_SUBMODULE_STRATEGY: normal

stages:
 - build
 - test
 - deploy

.test:
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
    - "*.tar.gz"
    - ./*.log
    - ./config.h
    - ./**/*.log

Debian:
  extends: .test
  image: $CI_REGISTRY/gsasl/build-images:Debian11
  stage: build
  script:
  - time ./bootstrap --skip-po
  - time ./configure --disable-static --enable-gcc-warnings --with-gssapi-impl=mit CFLAGS=-O0
  - time make syntax-check
  - time make -j$(nproc) V=1
  - time make dist
  - git diff --exit-code # nothing should change version controlled files

# https://www.synopsys.com/blogs/software-security/integrating-coverity-scan-with-gitlab-ci/
Coverity:
  extends: .test
  image: $CI_REGISTRY/gsasl/build-images:Debian11
  stage: build
  only:
    refs:
      - master
      - coverity
  script:
  - curl -o /tmp/cov-analysis-linux64.tgz https://scan.coverity.com/download/linux64
    --form project=$COVERITY_SCAN_PROJECT_NAME --form token=$COVERITY_SCAN_TOKEN
  - sha1sum /tmp/cov-analysis-linux64.tgz
  - tar xfz /tmp/cov-analysis-linux64.tgz
  - time ./bootstrap --skip-po
  - time ./configure --enable-gcc-warnings --with-gssapi-impl=mit CFLAGS="-g -Og"
  - cov-analysis-linux64-*/bin/cov-build --dir cov-int make check -j$(nproc)
  - tar cfz cov-int.tar.gz cov-int
  - curl https://scan.coverity.com/builds?project=$COVERITY_SCAN_PROJECT_NAME
    --form token=$COVERITY_SCAN_TOKEN --form email=$GITLAB_USER_EMAIL
    --form file=@cov-int.tar.gz --form version="`git describe --tags`"
    --form description="`git describe --tags` / $CI_COMMIT_TITLE / $CI_COMMIT_REF_NAME:$CI_PIPELINE_ID"
  artifacts:
    expire_in: 1 week
    paths:
      - cov-int/*.txt

# https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
sast:
  stage: build
include:
- template: Security/SAST.gitlab-ci.yml

# https://clang.llvm.org/docs/AddressSanitizer.html
# https://github.com/google/sanitizers/wiki/AddressSanitizer
# https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html
# https://clang.llvm.org/docs/LeakSanitizer.html
# https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer
# https://github.com/google/sanitizers/wiki/AddressSanitizerFlags
F36-clang-ASan-UBSan-mit:
  extends: .test
  image: fedora:36
  stage: build
  before_script:
  - dnf -y update
  - dnf -y install git make diffutils file hostname patch autoconf automake libtool gettext-devel texinfo help2man gtk-doc gengetopt gperf wget gnutls-devel
  - dnf -y install make clang diffutils krb5-devel gnutls-devel gnutls-utils krb5-server krb5-workstation iproute dovecot
  - dnf -y install https://github.com/rpmsphere/noarch/raw/master/r/rpmsphere-release-$(rpm -E %fedora)-1.noarch.rpm
  - dnf -y install mailutils-libs mailutils-imap4d
  script:
  - ./bootstrap --skip-po
  - ./configure --with-gssapi-impl=mit --enable-gcc-warnings CC=clang CFLAGS="-g -O1 -fsanitize=undefined -fsanitize=address -fsanitize-address-use-after-scope -fno-sanitize-recover=undefined -fno-omit-frame-pointer -fno-optimize-sibling-calls"
  - ASAN_OPTIONS=detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1 make check VERBOSE=t V=1
  - grep '^PASS gsasl-dovecot-gssapi' tests/gsasl-dovecot-gssapi.log
  - grep '^PASS gsasl-mailutils-cram' tests/gsasl-mailutils-cram.log
  - grep '^PASS gsasl-mailutils-tls' tests/gsasl-mailutils-tls.log
  - grep '^PASS gsasl-mailutils-gs2krb5-gssapi' tests/gsasl-mailutils-gs2krb5-gssapi.log

U2204-release:
  extends: .test
  image: ubuntu:22.04
  stage: build
  except:
    - tags # do-release-commit-and-tag: not on branch
  before_script:
  - apt-get update -qq
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq git autoconf automake libtool autopoint gettext cvs make texinfo texlive-font-utils help2man gtk-doc-tools libglib2.0-dev libidn11-dev libntlm0-dev libgnutls28-dev libkrb5-dev gengetopt gperf indent
  script:
  - ./bootstrap --skip-po
  - ./configure --enable-gcc-warnings --disable-silent-rules
  - make syntax-check
  - make
  - make dist
  - git diff --exit-code # nothing should change version controlled files
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q texlive texlive-plain-generic texlive-extra-utils gpg gpgv2
  - gpg --batch --passphrase '' --quick-gen-key bug-gsasl@gnu.org
  - git checkout $CI_COMMIT_BRANCH
  - git config user.email "bug-gsasl@gnu.org"
  - git config user.name "GNU SASL CICD Builder"
  - git config user.signingkey bug-gsasl@gnu.org
  - sed -i '5i ** WARNING This release was prepared automatically with no testing.\n' NEWS
  - git commit -m "Warn about automatic release." NEWS
  - make release-commit RELEASE='17.42.23 stable'
  - make
  - make release RELEASE='17.42.23 stable' V=1 VERBOSE=t
  - git diff --exit-code # nothing should change version controlled files

AlmaLinux8:
  extends: .test
  image: almalinux:8
  stage: build
  before_script:
  - dnf -y update
  - dnf -y install epel-release
  - dnf --enablerepo=powertools -y install git make diffutils file hostname patch autoconf automake libtool gettext-devel texinfo help2man gengetopt gperf gnutls-devel indent
  script:
  - ./bootstrap --skip-po
  - ./configure --enable-gcc-warnings --disable-silent-rules
  - make check V=1 VERBOSE=t
  - make syntax-check
  - make install
  - git diff --exit-code # nothing should change version controlled files

D-coverage-cyclo:
  image: debian:testing-slim # for lcov 1.16
  stage: build
  before_script:
  - apt-get update -qq
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq git autoconf automake libtool autopoint gettext make texinfo texlive texlive-plain-generic texlive-extra-utils texlive-font-utils help2man gtk-doc-tools libglib2.0-dev valgrind libidn11-dev libntlm0-dev libgnutls28-dev libkrb5-dev gengetopt gperf wget
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q iproute2 dovecot-imapd dovecot-gssapi krb5-kdc krb5-admin-server libgnutls28-dev gnutls-bin libmailutils9
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq lcov pmccabe
  - env DEBIAN_FRONTEND=noninteractive apt-get download mailutils-imap4d
  - dpkg -x mailutils-imap4d* /
  script:
  - ./bootstrap
  - ./configure --with-gssapi-impl=mit --enable-gcc-warnings
  - make init-coverage
  - make build-coverage VERBOSE=t
  - grep '^PASS gsasl-dovecot-gssapi' tests/gsasl-dovecot-gssapi.log
  - grep '^PASS gsasl-mailutils-cram' tests/gsasl-mailutils-cram.log
  - grep '^PASS gsasl-mailutils-tls' tests/gsasl-mailutils-tls.log
  - grep '^PASS gsasl-mailutils-gs2krb5-gssapi' tests/gsasl-mailutils-gs2krb5-gssapi.log
  - make dist
  - make syntax-check
  - lcov --remove doc/coverage/gsasl.info '/usr/include/*' '*/gl/*' '*/gltests/*' '*/lib/gl/*' '*/lib/gltests/*' -o doc/coverage/gsasl-filtered.info
  - make gen-coverage PACKAGE=gsasl-filtered
  - make -C doc/cyclo/ cyclo-gsasl.html
  - mkdir cyclo
  - cp -v doc/cyclo/cyclo-gsasl.html cyclo/index.html
  - cp -rv doc/coverage .
  - git diff --exit-code # nothing should change version controlled files
  artifacts:
    when: on_success
    paths:
      - coverage
      - cyclo
      - gsasl-*.tar.gz

Fedora-clanganalyzer:
  image: fedora:latest
  stage: build
  before_script:
  - dnf update -y
  - dnf install -y git make diffutils file hostname patch autoconf automake libtool gettext-devel texinfo texinfo-tex texlive texlive-supertabular texlive-framed texlive-morefloats texlive-quotchap texlive-epstopdf help2man gtk-doc gengetopt gperf wget dblatex gnutls-devel
  - dnf install -y clang clang-analyzer
  script:
  - ./bootstrap
  - scan-build ./configure --disable-silent-rules --enable-gtk-doc --enable-gtk-doc-pdf
  - scan-build -o clang-analyzer make V=1
  - make web-manual
  - make dist
  - git diff --exit-code # nothing should change version controlled files
  artifacts:
    when: on_success
    paths:
      - clang-analyzer
      - doc/reference
      - doc/manual
      - gsasl-*.tar.gz

.pages:
  stage: deploy
  needs: ["D-coverage-cyclo", "Fedora-clanganalyzer"]
  script:
    - mkdir public
    - mv coverage/ cyclo/ public/
    - mv clang-analyzer/* public/clang-analyzer
    - mv doc/manual public/manual
    - mv doc/reference/html public/reference
    - mv doc/reference/gsasl.pdf public/reference/
  artifacts:
    paths:
    - public
    expire_in: 30 days

pages:
  extends: .pages
  only:
    - master

pages-test:
  extends: .pages
  except:
    - master

Ubuntu-14.04:
  extends: .test
  image: ubuntu:14.04
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc valgrind
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings
  - make WERROR_CFLAGS= check V=1 VERBOSE=t

Debian11-heimdal:
  extends: .test
  image: debian:11-slim
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc heimdal-dev valgrind iproute2 dovecot-imapd dovecot-gssapi krb5-kdc krb5-admin-server gnutls-bin libmailutils7
  - env DEBIAN_FRONTEND=noninteractive apt-get download mailutils-imap4d
  - dpkg -x mailutils-imap4d* /
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure  --with-gssapi-impl=heimdal --enable-gcc-warnings
  - make check V=1 VERBOSE=t VALGRINDFLAGS=--leak-check=no
  - grep '^PASS gsasl-dovecot-gssapi' tests/gsasl-dovecot-gssapi.log
  - grep '^PASS gsasl-mailutils-cram' tests/gsasl-mailutils-cram.log
  - grep '^PASS gsasl-mailutils-tls' tests/gsasl-mailutils-tls.log
  - grep '^PASS gsasl-mailutils-gs2krb5-gssapi' tests/gsasl-mailutils-gs2krb5-gssapi.log
  - GSASL=src/gsasl tests/gsasl-dovecot-gssapi.sh
  - GSASL="./libtool --mode=execute valgrind --leak-check=full src/gsasl" tests/gsasl-dovecot-gssapi.sh

Ubuntu-20.04-mit:
  extends: .test
  image: ubuntu:20.04
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc libkrb5-dev valgrind iproute2 dovecot-imapd dovecot-gssapi krb5-kdc krb5-admin-server gnutls-bin libmailutils6
  - env DEBIAN_FRONTEND=noninteractive apt-get download mailutils-imap4d
  - dpkg --vextract mailutils-imap4d* .
  - mv usr/sbin/imap4d /usr/sbin
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure  --with-gssapi-impl=mit --enable-gcc-warnings
  - make check V=1 VERBOSE=t
  - grep '^PASS gsasl-dovecot-gssapi' tests/gsasl-dovecot-gssapi.log
  - grep '^PASS gsasl-mailutils-cram' tests/gsasl-mailutils-cram.log
  - grep '^PASS gsasl-mailutils-tls' tests/gsasl-mailutils-tls.log
  - grep '^PASS gsasl-mailutils-gs2krb5-gssapi' tests/gsasl-mailutils-gs2krb5-gssapi.log
  - GSASL=src/gsasl tests/gsasl-dovecot-gssapi.sh
  - GSASL="./libtool --mode=execute valgrind --error-exitcode=1 --leak-check=full src/gsasl" tests/gsasl-dovecot-gssapi.sh

Debian11-mit:
  extends: .test
  image: debian:11-slim
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc libkrb5-dev valgrind iproute2 dovecot-imapd dovecot-gssapi krb5-kdc krb5-admin-server libgnutls28-dev gnutls-bin libmailutils7
  - env DEBIAN_FRONTEND=noninteractive apt-get download mailutils-imap4d
  - dpkg --vextract mailutils-imap4d* .
  - mv usr/sbin/imap4d /usr/sbin
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --with-gssapi-impl=mit --enable-gcc-warnings
  - make check V=1 VERBOSE=t
  - grep '^PASS gsasl-dovecot-gssapi' tests/gsasl-dovecot-gssapi.log
  - grep '^PASS gsasl-mailutils-cram' tests/gsasl-mailutils-cram.log
  - GSASL=src/gsasl tests/gsasl-mailutils-cram.sh
  - GSASL="./libtool --mode=execute valgrind --error-exitcode=1 --leak-check=full src/gsasl" tests/gsasl-mailutils-cram.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-cram.sh
  - grep '^PASS gsasl-mailutils-tls' tests/gsasl-mailutils-tls.log
  - GSASL=src/gsasl tests/gsasl-mailutils-tls.sh
  - GSASL="./libtool --mode=execute valgrind --error-exitcode=1 --leak-check=full src/gsasl" tests/gsasl-mailutils-tls.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-tls.sh
  - grep '^PASS gsasl-mailutils-gs2krb5-gssapi' tests/gsasl-mailutils-gs2krb5-gssapi.log
  - GSASL=src/gsasl tests/gsasl-mailutils-gs2krb5-gssapi.sh
  - GSASL="./libtool --mode=execute valgrind --error-exitcode=1 --leak-check=full src/gsasl" tests/gsasl-mailutils-gs2krb5-gssapi.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-gs2krb5-gssapi.sh

Debian-testing-heimdal:
  extends: .test
  image: debian:testing-slim
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc heimdal-dev valgrind iproute2 dovecot-imapd dovecot-gssapi krb5-kdc krb5-admin-server libgnutls28-dev gnutls-bin libmailutils9
  - env DEBIAN_FRONTEND=noninteractive apt-get download mailutils-imap4d
  - dpkg -x mailutils-imap4d* /
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --with-gssapi-impl=mit --enable-gcc-warnings gl_cv_warn_c__Wuse_after_free_3=no
  - make check V=1 VERBOSE=t VALGRINDFLAGS=--leak-check=no
  - grep '^PASS gsasl-dovecot-gssapi' tests/gsasl-dovecot-gssapi.log
  - grep '^PASS gsasl-mailutils-cram' tests/gsasl-mailutils-cram.log
  - GSASL=src/gsasl tests/gsasl-mailutils-cram.sh
  - GSASL="./libtool --mode=execute valgrind --error-exitcode=1 src/gsasl" tests/gsasl-mailutils-cram.sh
  - GSASL="./libtool --mode=execute valgrind --leak-check=full src/gsasl" tests/gsasl-mailutils-cram.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-cram.sh
  - grep '^PASS gsasl-mailutils-tls' tests/gsasl-mailutils-tls.log
  - GSASL=src/gsasl tests/gsasl-mailutils-tls.sh
  - GSASL="./libtool --mode=execute valgrind --error-exitcode=1 src/gsasl" tests/gsasl-mailutils-tls.sh
  - GSASL="./libtool --mode=execute valgrind --leak-check=full src/gsasl" tests/gsasl-mailutils-tls.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-tls.sh
  - grep '^PASS gsasl-mailutils-gs2krb5-gssapi' tests/gsasl-mailutils-gs2krb5-gssapi.log
  - GSASL=src/gsasl tests/gsasl-mailutils-gs2krb5-gssapi.sh
  - GSASL="./libtool --mode=execute valgrind --error-exitcode=1 src/gsasl" tests/gsasl-mailutils-gs2krb5-gssapi.sh
  - GSASL="./libtool --mode=execute valgrind --leak-check=full src/gsasl" tests/gsasl-mailutils-gs2krb5-gssapi.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-gs2krb5-gssapi.sh

Ubuntu-20.04-gssglue:
  extends: .test
  image: ubuntu:20.04 # FIXME XXX 22.04: gsasl-mailutils-tls: imap4d: process 21651 terminated on signal 11
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc libgssglue-dev valgrind iproute2 dovecot-imapd dovecot-gssapi krb5-kdc krb5-admin-server libgnutls28-dev gnutls-bin libmailutils6
  - env DEBIAN_FRONTEND=noninteractive apt-get download mailutils-imap4d
  - dpkg --vextract mailutils-imap4d* .
  - mv usr/sbin/imap4d /usr/sbin
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --with-gssapi-impl=gssglue --enable-gcc-warnings
  - make check V=1 VERBOSE=t WERROR_CFLAGS="-Werror -Wno-error=discarded-qualifiers" VALGRINDFLAGS="--error-exitcode=0 --leak-check=no"
  - grep '^PASS gsasl-dovecot-gssapi' tests/gsasl-dovecot-gssapi.log
  - grep '^PASS gsasl-mailutils-cram' tests/gsasl-mailutils-cram.log
  - GSASL=src/gsasl tests/gsasl-mailutils-cram.sh
  - GSASL="./libtool --mode=execute valgrind --error-exitcode=1 --leak-check=full src/gsasl" tests/gsasl-mailutils-cram.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-cram.sh
  - grep '^PASS gsasl-mailutils-tls' tests/gsasl-mailutils-tls.log
  - GSASL=src/gsasl tests/gsasl-mailutils-tls.sh
  - GSASL="./libtool --mode=execute valgrind src/gsasl" tests/gsasl-mailutils-tls.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-tls.sh
  - grep '^PASS gsasl-mailutils-gs2krb5-gssapi' tests/gsasl-mailutils-gs2krb5-gssapi.log
  - GSASL=src/gsasl tests/gsasl-mailutils-gs2krb5-gssapi.sh
  - GSASL="./libtool --mode=execute valgrind --leak-check=full src/gsasl" tests/gsasl-mailutils-gs2krb5-gssapi.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-gs2krb5-gssapi.sh

Ubuntu-22.04-gssglue:
  extends: .test
  image: ubuntu:22.04
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc libgssglue-dev valgrind iproute2 dovecot-imapd dovecot-gssapi krb5-kdc krb5-admin-server libgnutls28-dev libmailutils8
  - env DEBIAN_FRONTEND=noninteractive apt-get download mailutils-imap4d
  - dpkg --vextract mailutils-imap4d* .
  - mv usr/sbin/imap4d /usr/sbin
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --with-gssapi-impl=gssglue --enable-gcc-warnings
  - make check V=1 VERBOSE=t WERROR_CFLAGS="-Werror -Wno-error=discarded-qualifiers" VALGRINDFLAGS=--leak-check=no
  - grep '^PASS gsasl-dovecot-gssapi' tests/gsasl-dovecot-gssapi.log
  - grep '^PASS gsasl-mailutils-cram' tests/gsasl-mailutils-cram.log
  - GSASL=src/gsasl tests/gsasl-mailutils-cram.sh
  - GSASL="./libtool --mode=execute valgrind --error-exitcode=1 --leak-check=full src/gsasl" tests/gsasl-mailutils-cram.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-cram.sh
  - grep '^PASS gsasl-mailutils-gs2krb5-gssapi' tests/gsasl-mailutils-gs2krb5-gssapi.log
  - GSASL=src/gsasl tests/gsasl-mailutils-gs2krb5-gssapi.sh
  - GSASL="./libtool --mode=execute valgrind --leak-check=full src/gsasl" tests/gsasl-mailutils-gs2krb5-gssapi.sh
  - GSASL=src/gsasl IMAP4D="valgrind --error-exitcode=1 env LD_PRELOAD=lib/src/.libs/libgsasl.so /usr/sbin/imap4d" tests/gsasl-mailutils-gs2krb5-gssapi.sh

Trisquel10-distcheck:
  extends: .test
  image: kpengboy/trisquel:10.0
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc gtk-doc-tools texinfo texlive texlive-plain-generic valgrind
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings
  - make distcheck V=1 VERBOSE=t

CentOS7:
  extends: .test
  image: centos:7
  stage: test
  needs: [Debian]
  before_script:
  - yum -y install make gcc diffutils gnutls-devel
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings
  - make check V=1 VERBOSE=t

AlmaLinux8-krb5:
  extends: .test
  image: almalinux:8
  stage: test
  needs: [Debian]
  before_script:
  - yum -y install make gcc diffutils krb5-devel valgrind
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings --with-gssapi-impl=mit
  - grep 'USE_GS2 1' config.log
  - make check V=1 VERBOSE=t

Alpine:
  extends: .test
  image: alpine:latest
  stage: test
  needs: [Debian]
  before_script:
  - echo "ipv6" >> /etc/modules
  - apk update
  - apk add build-base gettext gettext-dev valgrind
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings
  - sed -i 's/UNKNOWN/10.11.12/g' tests/version.c # XXX FIXME alpine bug?
  - make check V=1 VERBOSE=t

Alpine-heimdal:
  extends: .test
  image: alpine:latest
  stage: test
  needs: [Debian]
  before_script:
  - echo "ipv6" >> /etc/modules
  - apk update
  - apk add build-base gettext gettext-dev heimdal-dev valgrind
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings --with-gssapi-impl=heimdal
  - grep 'USE_GS2 1' config.log
  - sed -i 's/UNKNOWN/10.11.12/g' tests/version.c # XXX FIXME alpine bug?
  - make check V=1 VERBOSE=t

ArchLinux:
  extends: .test
  image: archlinux:latest
  stage: test
  needs: [Debian]
  before_script:
  - pacman -Syu --noconfirm make gcc diffutils file net-tools inetutils
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - ../configure
  - make check V=1 VERBOSE=t

Debian8:
  extends: .test
  image: debian:stretch-slim
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc indent
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings
  - make check V=1 VERBOSE=t
  - make syntax-check

Debian9-gss:
  extends: .test
  image: debian:buster-slim
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc libgss-dev
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --with-gssapi-impl=gss --enable-gcc-warnings
  - grep 'ac_cv_libgss=yes' config.log
  - grep 'USE_GS2 1' config.log
  - make check V=1 VERBOSE=t
  - grep '^PASS gssapi' tests/gssapi.log
  - grep '^PASS gs2-krb5' tests/gs2-krb5.log

Debian10-gssglue:
  extends: .test
  image: debian:stretch-slim
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -q
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc libgssglue-dev libgnutls28-dev
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --with-gssapi-impl=gssglue --enable-gcc-warnings
  - grep 'ac_cv_libgssglue=yes' config.log
  - grep 'USE_GS2 1' config.log
  - make check V=1 VERBOSE=t WERROR_CFLAGS="-Werror -Wno-error=discarded-qualifiers"

Debian11-armcross:
  extends: .test
  image: debian:bullseye-slim
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -qq
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc-arm-linux-gnueabi qemu-user qemu-user-binfmt file
  - update-binfmts --enable qemu-arm
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - ../configure --host=arm-linux-gnueabi --enable-gcc-warnings CFLAGS="-static --static"
  - make V=1
  - arm-linux-gnueabi-readelf -h lib/src/.libs/libgsasl.a
  - arm-linux-gnueabi-readelf -h src/gsasl
  - file src/gsasl
  - LANG=C.UTF-8 qemu-arm src/gsasl --mkpasswd --mechanism SCRAM-SHA-1 -p foo
  - make check VERBOSE=t

Debian-gsasl4win:
  extends: .test
  image: debian:bullseye
  stage: test
  needs: [Debian]
  before_script:
    - dpkg --add-architecture i386
    - apt-get update -q
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make mingw-w64 wine wine32 wine64 libwine libwine:i386 binfmt-support wine-binfmt zip
    - update-binfmts --enable wine
  script:
  - mkdir windows/dist
  - cp gsasl-*.tar.gz windows/dist/
  - cd windows/
  - make -f gsasl4win.mk VERSION=`echo dist/gsasl-*.tar.gz | sed -e 's/.*gsasl-//g' -e 's/.tar.gz//g'` gsasl4win32 gsasl4win64
  artifacts:
    expire_in: 2 weeks
    paths:
      - windows/gsasl-*.zip

Mingw32:
  extends: .test
  image: debian:latest
  stage: test
  needs: [Debian]
  before_script:
    - dpkg --add-architecture i386
    - apt-get update -q
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make mingw-w64 wine wine32 libwine libwine:i386 binfmt-support wine-binfmt
    - update-binfmts --enable wine
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - ../configure --host=i686-w64-mingw32 CC='i686-w64-mingw32-gcc -static-libgcc' --enable-gcc-warnings
  - make WERROR_CFLAGS= check V=1 VERBOSE=t

Mingw64:
  extends: .test
  image: debian:latest
  stage: test
  needs: [Debian]
  before_script:
    - apt-get update -q
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make mingw-w64 wine wine64 binfmt-support wine-binfmt
    - update-binfmts --enable wine
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - ../configure --host=x86_64-w64-mingw32 --enable-gcc-warnings
  - make WERROR_CFLAGS= check V=1 VERBOSE=t

Debian-interop:
  extends: .test
  image: debian:sid
  stage: test
  needs: [Debian]
  before_script:
    - apt-get update -q
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc file libntlm0-dev
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q msmtp swaks libauthen-sasl-perl libmailutils-dev dovecot-imapd
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - ../configure
  - make V=1
  - examples/smtp-server &
  - rm /etc/dovecot/conf.d/10-auth.conf
  - echo amFzOntQTEFJTn1zZXNhbTo6OjoK | base64 -d > /etc/dovecot/users
  - echo bG9nX3BhdGggPSAvdmFyL2xvZy9kb3ZlY290LmxvZwpwcm90b2NvbCBpbWFwIHsKfQpwYXNzZGIgewogIGRyaXZlciA9IHBhc3N3ZC1maWxlCiAgYXJncyA9IC9ldGMvZG92ZWNvdC91c2Vycwp9CnVzZXJkYiB7CiAgZHJpdmVyID0gc3RhdGljCiAgYXJncyA9IHVpZD1ub2JvZHkgZ2lkPW5vZ3JvdXAgaG9tZT0vdG1wL2RvdmVjb3QvJWQvJXUKfQpkaXNhYmxlX3BsYWludGV4dF9hdXRoPW5vCmF1dGhfbWVjaGFuaXNtcyA9IHBsYWluIGxvZ2luIGRpZ2VzdC1tZDUgY3JhbS1tZDUgc2NyYW0tc2hhLTEgc2NyYW0tc2hhLTI1NiBhbm9ueW1vdXMgZXh0ZXJuYWwgeG9hdXRoMgo= | base64 -d > /etc/dovecot/local.conf
  - service dovecot restart
  - src/gsasl localhost 2000 --smtp --mechanism PLAIN --password sesam -d
  - src/gsasl localhost 2000 --smtp --mechanism LOGIN --password sesam -d
  - src/gsasl localhost 2000 --smtp --mechanism CRAM-MD5 --password sesam -d
  - src/gsasl localhost 2000 --smtp --mechanism DIGEST-MD5 --password sesam -d --quality-of-protection="" --realm=""
  - src/gsasl localhost 2000 --smtp --mechanism SCRAM-SHA-1 --password sesam -d
  - src/gsasl localhost 2000 --smtp --mechanism SCRAM-SHA-256 --password sesam -d
  - (src/gsasl localhost 2000 --smtp --mechanism PLAIN --password wrong -d 2>&1 || true) | grep 'server error'
  - (src/gsasl localhost 2000 --smtp --mechanism LOGIN --password wrong -d 2>&1 || true) | grep 'server error'
  - (src/gsasl localhost 2000 --smtp --mechanism CRAM-MD5 --password wrong -d 2>&1 || true) | grep 'server error'
  - (src/gsasl localhost 2000 --smtp --mechanism DIGEST-MD5 --password wrong -d --quality-of-protection="" --realm="" 2>&1 || true) | grep 'server error'
  - (src/gsasl localhost 2000 --smtp --mechanism SCRAM-SHA-1 --password wrong -d 2>&1 || true) | grep 'server error'
  - (src/gsasl localhost 2000 --smtp --mechanism SCRAM-SHA-256 --password wrong -d 2>&1 || true) | grep 'server error'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password sesam\nauth PLAIN\nquit\n" |mailutils smtp 2>&1 | grep '235 OK \[authid'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password sesam\nauth LOGIN\nquit\n" |mailutils smtp 2>&1 | grep '235 OK \[authid'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password sesam\nauth CRAM-MD5\nquit\n" |mailutils smtp 2>&1 | grep '235 OK \[authid'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password sesam\nauth DIGEST-MD5\nquit\n" |mailutils smtp 2>&1 | grep '235 OK \[authid'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password sesam\nauth SCRAM-SHA-1\nquit\n" |mailutils smtp 2>&1 | grep '235 OK \[authid'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password sesam\nauth SCRAM-SHA-256\nquit\n" | LD_PRELOAD=lib/src/.libs/libgsasl.so mailutils smtp 2>&1 | grep '235 OK \[authid'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password wrong\nauth PLAIN\nquit\n" |mailutils smtp 2>&1 | grep 'Error authenticating user'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password wrong\nauth LOGIN\nquit\n" |mailutils smtp 2>&1 | grep 'Error authenticating user'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password wrong\nauth CRAM-MD5\nquit\n" |mailutils smtp 2>&1 | grep 'Error authenticating user'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password wrong\nauth DIGEST-MD5\nquit\n" |mailutils smtp 2>&1 | grep 'Error authenticating user'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password wrong\nauth SCRAM-SHA-1\nquit\n" |mailutils smtp 2>&1 | grep 'Error authenticating user'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username jas\nset password wrong\nauth SCRAM-SHA-256\nquit\n" | LD_PRELOAD=lib/src/.libs/libgsasl.so mailutils smtp 2>&1 | grep 'Error authenticating user'
  - (swaks --to user@example.com --server 127.0.0.1:2000 --auth CRAM-MD5 --auth-user jas --auth-password wrong 2>&1 || true) | grep 'No authentication type succeeded'
  - (swaks --to user@example.com --server 127.0.0.1:2000 --auth DIGEST-MD5 --auth-user jas --auth-password wrong 2>&1 || true) | grep 'No authentication type succeeded'
  - (swaks --to user@example.com --server 127.0.0.1:2000 --auth PLAIN --auth-user jas --auth-password wrong 2>&1 || true) | grep 'No authentication type succeeded'
  - (swaks --to user@example.com --server 127.0.0.1:2000 --auth LOGIN --auth-user jas --auth-password wrong 2>&1 || true) | grep 'No authentication type succeeded'
  - swaks --to user@example.com --server 127.0.0.1:2000 --auth CRAM-MD5 --auth-user jas --auth-password sesam
  - swaks --to user@example.com --server 127.0.0.1:2000 --auth DIGEST-MD5 --auth-user jas --auth-password sesam
  - swaks --to user@example.com --server 127.0.0.1:2000 --auth PLAIN --auth-user jas --auth-password sesam
  - swaks --to user@example.com --server 127.0.0.1:2000 --auth LOGIN --auth-user jas --auth-password sesam
  - echo foo | msmtp --host=localhost --port=2000 --auth=cram-md5 --debug -f user@example.com user@example.com --user=jas  --passwordeval 'echo sesam'
  - echo foo | msmtp --host=localhost --port=2000 --auth=digest-md5 --debug -f user@example.com user@example.com --user=jas  --passwordeval 'echo sesam'
  - echo foo | msmtp --host=localhost --port=2000 --auth=scram-sha-1 --debug -f user@example.com user@example.com --user=jas  --passwordeval 'echo sesam'
  - echo foo | msmtp --host=localhost --port=2000 --auth=plain --debug -f user@example.com user@example.com --user=jas  --passwordeval 'echo sesam'
  - echo foo | msmtp --host=localhost --port=2000 --auth=login --debug -f user@example.com user@example.com --user=jas  --passwordeval 'echo sesam'
  - tail -F /var/log/dovecot.log &
  - src/gsasl localhost --no-starttls --mechanism PLAIN -a jas --password sesam -d
  - src/gsasl localhost --no-starttls --mechanism LOGIN -a jas --password sesam -d
  - src/gsasl localhost --no-starttls --mechanism CRAM-MD5 -a jas --password sesam -d
  - src/gsasl localhost --no-starttls --mechanism DIGEST-MD5 -a jas --password sesam -d --quality-of-protection="" --realm=""
  - src/gsasl localhost --no-starttls --mechanism SCRAM-SHA-1 -a jas --password sesam -d
  - src/gsasl localhost --no-starttls --mechanism SCRAM-SHA-256 -a jas --password sesam -d
  - src/gsasl localhost --no-starttls --mechanism ANONYMOUS -n user -d

Debian11-gss-interop:
  extends: .test
  image: debian:11-slim
  stage: test
  needs: [Debian]
  before_script:
  - apt-get update -qq
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q make gcc file libntlm0-dev | tail -10
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq krb5-multidev libgssglue-dev heimdal-multidev libgss-dev valgrind | tail -10
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -q shishi msmtp swaks libauthen-sasl-perl libmailutils-dev dovecot-imapd dovecot-gssapi krb5-kdc krb5-admin-server net-tools expect | tail -10
  - rm /etc/dovecot/conf.d/10-auth.conf
  - echo 'jas:{PLAIN}sesam::::' > /etc/dovecot/users
  - printf 'auth_gssapi_hostname = imap.gsasl.example\nauth_krb5_keytab = /etc/dovecot/dovecot.keytab\nlog_path = /var/log/dovecot.log\nprotocol imap {\n}\npassdb {\n  driver = passwd-file\n  args = /etc/dovecot/users\n}\nuserdb {\n  driver = static\n  args = uid=nobody gid=nogroup home=/tmp/dovecot/%d/%u\n}\ndisable_plaintext_auth=no\nauth_mechanisms = plain login digest-md5 cram-md5 scram-sha-1 scram-sha-256 gssapi anonymous external xoauth2\n' > /etc/dovecot/local.conf
  - sed -i 's/default_realm =.*/default_realm = GSASL.EXAMPLE/' /etc/krb5.conf
  - sed -i 's/EXAMPLE.COM = {/GSASL.EXAMPLE = {/' /etc/krb5kdc/kdc.conf
  - printf '[logging]\nkdc = FILE:/tmp/kdc.log\n' >> /etc/krb5kdc/kdc.conf
  - printf '[realms]\nGSASL.EXAMPLE = {\nkdc = kdc.gsasl.example\n}\n' >> /etc/krb5.conf
  - printf '127.0.1.2 kdc.gsasl.example\n127.0.1.3 imap.gsasl.example\n127.0.1.4 smtp.gsasl.example' >> /etc/hosts
  - printf 'default-realm GSASL.EXAMPLE\nrealm-kdc=GSASL.EXAMPLE,kdc.gsasl.example/tcp\n' > /etc/shishi/shishi.conf
  - cat /etc/krb5.conf
  - cat /etc/krb5kdc/kdc.conf
  - kdb5_util -P foo create -s
  - kadmin.local addprinc -randkey smtp/smtp.gsasl.example
  - kadmin.local addprinc -randkey imap/imap.gsasl.example
  - kadmin.local addprinc -pw bar jas
  - kadmin.local ktadd smtp/smtp.gsasl.example
  - kadmin.local ktadd -k /etc/dovecot/dovecot.keytab imap/imap.gsasl.example
  - chgrp dovecot /etc/dovecot/dovecot.keytab
  - chmod g+r /etc/dovecot/dovecot.keytab
  - service dovecot restart
  - service krb5-kdc restart
  - echo bar | kinit jas@GSASL.EXAMPLE
  - tail -F /var/log/dovecot.log /tmp/kdc.log &
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - mkdir mit
  - cd mit
  - ../configure --with-gssapi-impl=mit | tail -45
  - make | tail -10
  - ./libtool --mode=execute valgrind --error-exitcode=1 --exit-on-first-error=yes examples/smtp-server 2000 &
  - while ! netstat -na|grep 0.0.0.0:2000; do sleep 1; done
  - src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GSSAPI -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GS2-KRB5 -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username rms\nset service smtp\nset host smtp.gsasl.example\nauth GSSAPI\nquit\n" | mailutils smtp 2>&1 | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]' # 'authzid:rms -- system libgsasl has GSS-API client authzid bug
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username rms\nset service smtp\nset host smtp.gsasl.example\nauth GS2-KRB5\nquit\n" | mailutils smtp 2>&1 | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset password unused\nset service smtp\nset host smtp.gsasl.example\nauth GSSAPI\nquit\n" | mailutils smtp 2>&1 | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset password unused jas\nset service smtp\nset host smtp.gsasl.example\nauth GS2-KRB5\nquit\n" | mailutils smtp 2>&1 | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username rms\nset service smtp\nset host smtp.gsasl.example\nauth GSSAPI\nquit\n" | LD_PRELOAD=lib/src/.libs/libgsasl.so mailutils smtp 2>&1 | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset username rms\nset service smtp\nset host smtp.gsasl.example\nauth GS2-KRB5\nquit\n" | LD_PRELOAD=lib/src/.libs/libgsasl.so mailutils smtp 2>&1 | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset password unused\nset service smtp\nset host smtp.gsasl.example\nauth GSSAPI\nquit\n" | LD_PRELOAD=lib/src/.libs/libgsasl.so mailutils smtp 2>&1 | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - printf "verbose on\nconnect 127.0.0.1 2000\nehlo foo\nset password unused jas\nset service smtp\nset host smtp.gsasl.example\nauth GS2-KRB5\nquit\n" | LD_PRELOAD=lib/src/.libs/libgsasl.so mailutils smtp 2>&1 | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - echo foo | msmtp --host=smtp.gsasl.example --port=2000 --auth=gssapi --debug -f user@example.com user@example.com --user=jas | grep '235 OK \[authid. N/A authzid. jas gssname. jas@GSASL.EXAMPLE\]' # system libgssapi GSSAPI authzid bug
  - echo foo | LD_PRELOAD=lib/src/.libs/libgsasl.so msmtp --host=smtp.gsasl.example --port=2000 --auth=gssapi --debug -f user@example.com user@example.com --user=jas | grep '235 OK \[authid. N/A authzid. jas gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -a jas -d 2>&1 | tee /dev/stderr | grep 'Client authentication finished (server trusted)...'
  - mkdir ../gssglue
  - cd ../gssglue
  - ../configure --with-gssapi-impl=gssglue CPPFLAGS=-I/usr/include/gssglue | tail -45
  - make | tail -10
  - ./libtool --mode=execute valgrind --error-exitcode=1 --exit-on-first-error=yes examples/smtp-server 2001 & # gssglue with default libgssapi-krb5.so once someone connect
  - while ! netstat -na|grep 0.0.0.0:2001; do sleep 1; done
  - src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -a jas -d 2>&1 | tee /dev/stderr | grep 'Client authentication finished (server trusted)...'
  - (! env LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libgsasl.so.7 src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -d 2>&1) | tee /dev/stderr | grep 'gsasl. server error' # system libgsasl GSS-API client authzid bug - sends 'root' as authzid
  - src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -d 2>&1 | tee /dev/stderr | grep 'Client authentication finished (server trusted)...'
  - mv /etc/gssapi_mech.conf /etc/gssapi_mech.conf-
  - echo 'fnord' > /etc/gssapi_mech.conf
  - (! src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GSSAPI -d 2>&1) | tee /dev/stderr | grep fnord
  - echo 'libgssapi.so.3 mechglue_internal_krb5_init' > /etc/gssapi_mech.conf # heimdal
  - src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -a jas -d 2>&1 | tee /dev/stderr | grep 'Client authentication finished (server trusted)...'
  - ./libtool --mode=execute valgrind --error-exitcode=1 --exit-on-first-error=yes examples/smtp-server 2010 & # gssglue with heimdal libgssapi.so once someone connect
  - while ! netstat -na|grep 0.0.0.0:2010; do sleep 1; done
  - src/gsasl smtp.gsasl.example 2010 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2010 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - mv /etc/gssapi_mech.conf- /etc/gssapi_mech.conf
  - mkdir ../heimdal
  - cd ../heimdal
  - ../configure --with-gssapi-impl=heimdal | tail -45
  - make | tail -10
  - ./libtool --mode=execute valgrind --error-exitcode=1 --exit-on-first-error=yes examples/smtp-server 2002 &
  - while ! netstat -na|grep 0.0.0.0:2002; do sleep 1; done
  - src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2002 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2002 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2010 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl smtp.gsasl.example 2010 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -a jas -d 2>&1 | tee /dev/stderr | grep 'Client authentication finished (server trusted)...'
  - src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -d 2>&1 | tee /dev/stderr | grep 'Client authentication finished (server trusted)...'
  - (! env LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libgsasl.so.7 src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -d 2>&1) | tee /dev/stderr | grep 'gsasl. server error'
  - mkdir ../gss
  - cd ../gss
  - ../configure --with-gssapi-impl=gss | tail -45
  - make check LOG_VALGRIND= VALGRIND= | tail -10 # tests/gssapi.c actually does something only with libgss
  - ./libtool --mode=execute valgrind --error-exitcode=1 --exit-on-first-error=yes examples/smtp-server 2003 &
  - while ! netstat -na|grep 0.0.0.0:2003; do sleep 1; done
  - expect -c 'spawn shishi jas; expect "*assword" ;send -- "bar\r"; expect ticket; exit'
  - shishi -l  # FIXME XXX use of SHISHI_USER=jas below is a Shishi bug or at least misfeature
  - (! env SHISHI_USER=jas src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -a jas -d 2>&1) | tee /dev/stderr | grep 'gss_unwrap' # FIXME XXX no support for AES gss_wrap in GNU GSS
  - (! env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GSSAPI -a jas -d 2>&1) | grep 'gss_unwrap'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]' # GS2 doesn't use gss_wrap
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GS2-KRB5 -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - echo 'client-kdc-etypes=des3-cbc-sha1-kd' > ~/.shishi/shishi.conf # Try 3DES that GNU GSS support
  - shishi -l
  - (! env SHISHI_USER=jas src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -a jas -d 2>&1) | tee /dev/stderr | grep 'BAD_ENCRYPTION_TYPE' # no 3DES key on KDC
  - (! env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GSSAPI -a jas -d 2>&1) | grep 'gss_unwrap' # uses cached AES key for service
  - shishi -d --server-name smtp/smtp.gsasl.example -v # remove AES key for smtp.gsasl.example
  - (! env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GSSAPI -a jas -d 2>&1) | grep 'gss_init_sec_context' # attempts to get 3des key but it doesn't exist
  - kadmin.local ktadd -e des3-cbc-sha1 smtp/smtp.gsasl.example
  - kadmin.local ktadd -e des3-cbc-sha1 -k /etc/dovecot/dovecot.keytab imap/imap.gsasl.example
  - env SHISHI_USER=jas src/gsasl imap.gsasl.example --no-starttls --mechanism GSSAPI -a jas -d 2>&1 | tee /dev/stderr | grep 'Client authentication finished (server trusted)...'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GSSAPI -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2000 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GSSAPI -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2002 --smtp --mechanism GSSAPI -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2002 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2010 --smtp --mechanism GSSAPI -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2010 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - (! env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2003 --smtp --mechanism GSSAPI -d 2>&1) | grep 'gss_acquire_cred' # no system keys for shishi-based server
  - (! env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2003 --smtp --mechanism GS2-KRB5 -d 2>&1) | grep 'gss_acquire_cred'
  - rm /etc/krb5.keytab
  - kadmin.local ktadd -e des3-cbc-sha1 smtp/smtp.gsasl.example
  - keytab2shishi --verbose
  - shishi -d --server-name smtp/smtp.gsasl.example -v # remove old 3DES key for smtp.gsasl.example
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2003 --smtp --mechanism GSSAPI -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas\]' # GSS bug wrt displayname?
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2003 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas\]'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2003 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas\]' # GSS bug wrt displayname?
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2003 --smtp --mechanism GS2-KRB5 -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas\]'
  - mv /etc/gssapi_mech.conf /etc/gssapi_mech.conf-
  - echo 'libgss.so.3 mechglue_internal_krb5_init' > /etc/gssapi_mech.conf # gnu gss
  - env SHISHI_USER=jas ../gssglue/src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas@GSASL.EXAMPLE\]'
  - env SHISHI_USER=jas ../gssglue/src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - env SHISHI_USER=jas ../gssglue/src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GSSAPI -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas@GSASL.EXAMPLE\]'
  - mv ~/.shishi/tickets ~/.shishi/tickets-
  - (! env SHISHI_USER=jas ../gssglue/src/gsasl smtp.gsasl.example 2001 --smtp --mechanism GSSAPI -d 2>&1) | grep 'gss_init_sec_context'
  - mv ~/.shishi/tickets- ~/.shishi/tickets
  - ../gssglue/libtool --mode=execute valgrind --error-exitcode=1 --exit-on-first-error=yes ../gssglue/examples/smtp-server 2011 & # gssglue with gnu gss once someone connect
  - while ! netstat -na|grep 0.0.0.0:2011; do sleep 1; done
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2011 --smtp --mechanism GSSAPI -z rms -d | grep '235 OK \[authid. N/A authzid. rms gssname. jas\]'
  - env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2011 --smtp --mechanism GS2-KRB5 -d | grep '235 OK \[authid. N/A authzid. N/A gssname. jas\]'
  - mv /etc/shishi/shishi.keys /etc/shishi/shishi.keys-
  - (! env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2011 --smtp --mechanism GSSAPI -a jas -d 2>&1) | grep 'gss_acquire'
  - mv /etc/shishi/shishi.keys- /etc/shishi/shishi.keys
  - shishi -d
  - (! env SHISHI_USER=jas src/gsasl smtp.gsasl.example 2011 --smtp --mechanism GSSAPI -a jas -d 2>&1) | grep 'gss_init_sec'
  - mv /etc/gssapi_mech.conf- /etc/gssapi_mech.conf
  - sleep 10 # allow log outputs to catch up
